<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://iamhyunji.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://iamhyunji.github.io//" rel="alternate" type="text/html" /><updated>2021-04-18T12:45:31+09:00</updated><id>https://iamhyunji.github.io//feed.xml</id><title type="html">매일매일 개발 블로그</title><subtitle>개발 공부 및 생활 관련 블로그</subtitle><author><name>Hyun</name></author><entry><title type="html">[정보처리기사] 2일차</title><link href="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day02/" rel="alternate" type="text/html" title="[정보처리기사] 2일차" /><published>2021-04-16T00:00:00+09:00</published><updated>2021-04-16T00:00:00+09:00</updated><id>https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day02</id><content type="html" xml:base="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day02/">&lt;h2 id=&quot;ii-데이터-입출력-구현&quot;&gt;II. 데이터 입출력 구현&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/pdfs/2021-04-16-certificate-day02.pdf&quot; class=&quot;btn&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;far fa-file-pdf&quot;&gt;&lt;/i&gt;&lt;span&gt; 정보처리기사 - II단원 오답.pdf&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;단원-목차&quot;&gt;단원 목차&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;논리 데이터 저장소 확인
    &lt;ul&gt;
      &lt;li&gt;논리 데이터 모델 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;물리 데이터 저장소 설계
    &lt;ul&gt;
      &lt;li&gt;물리 데이터 모델 설계&lt;/li&gt;
      &lt;li&gt;물리 데이터 저장소 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 조작 프로시저 작성
    &lt;ul&gt;
      &lt;li&gt;데이터 조작 프로시저 개발&lt;/li&gt;
      &lt;li&gt;데이터 조작 프로시저 테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 조작 프로시저 최적화
    &lt;ul&gt;
      &lt;li&gt;데이터 조작 프로시저 성능개선&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;설명&quot;&gt;설명&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;수제비 정보처리기사 실기책을 공부하면서 한 &lt;strong&gt;오답 정리&lt;/strong&gt;입니다.&lt;/li&gt;
  &lt;li&gt;이동 시 보기 편하도록 pdf 파일로 올렸습니다. 이는 위에 첨부된 &lt;span style=&quot;cursor:pointer;&quot; onclick=&quot;window.scrollTo(0,0);&quot;&gt;&lt;b&gt;&lt;u&gt;정보처리기사 - II단원 오답.pdf&lt;/u&gt;&lt;/b&gt;&lt;/span&gt; 파일을 클릭하시면 확인할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대단원-중단원-소단원&lt;/strong&gt;으로 구분 되어 있고, &lt;strong&gt;문제-상위 키워드-답&lt;/strong&gt;으로 구성되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Hyun</name></author><category term="정보처리기사" /><summary type="html">정보처리기사 II단원 관련 정리</summary></entry><entry><title type="html">[정보처리기사] 3일차</title><link href="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day03/" rel="alternate" type="text/html" title="[정보처리기사] 3일차" /><published>2021-04-16T00:00:00+09:00</published><updated>2021-04-16T00:00:00+09:00</updated><id>https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day03</id><content type="html" xml:base="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day03/">&lt;h2 id=&quot;ii-통합-구현&quot;&gt;II. 통합 구현&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/pdfs/2021-04-16-certificate-day03.pdf&quot; class=&quot;btn&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;far fa-file-pdf&quot;&gt;&lt;/i&gt;&lt;span&gt; 정보처리기사 - III단원 오답.pdf&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;단원-목차&quot;&gt;단원 목차&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;연계 데이터 구성
    &lt;ul&gt;
      &lt;li&gt;연계 요구사항 분석&lt;/li&gt;
      &lt;li&gt;연계 데이터 식별 및 표준화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;연계 메커니즘 구성
    &lt;ul&gt;
      &lt;li&gt;연계 메커니즘 정의&lt;/li&gt;
      &lt;li&gt;연계 장애 및 오류처리 구현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내외부 연계 모듈 구현
    &lt;ul&gt;
      &lt;li&gt;연계 모듈 구현 환경 구성 및 개발&lt;/li&gt;
      &lt;li&gt;연계 테스트 및 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;설명&quot;&gt;설명&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;수제비 정보처리기사 실기책을 공부하면서 한 &lt;strong&gt;오답 정리&lt;/strong&gt;입니다.&lt;/li&gt;
  &lt;li&gt;이동 시 보기 편하도록 pdf 파일로 올렸습니다. 이는 위에 첨부된 &lt;span style=&quot;cursor:pointer;&quot; onclick=&quot;window.scrollTo(0,0);&quot;&gt;&lt;b&gt;&lt;u&gt;정보처리기사 - II단원 오답.pdf&lt;/u&gt;&lt;/b&gt;&lt;/span&gt; 파일을 클릭하시면 확인할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대단원-중단원-소단원&lt;/strong&gt;으로 구분 되어 있고, &lt;strong&gt;문제-상위 키워드-답&lt;/strong&gt;으로 구성되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Hyun</name></author><category term="정보처리기사" /><summary type="html">정보처리기사 III단원 관련 정리</summary></entry><entry><title type="html">[소프트웨어 공학] CH01. 소프트웨어 공학과 소프트웨어</title><link href="https://iamhyunji.github.io//cs%EA%B8%B0%EC%B4%88/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%20%EA%B3%B5%ED%95%99/software-engineering-01/" rel="alternate" type="text/html" title="[소프트웨어 공학] CH01. 소프트웨어 공학과 소프트웨어" /><published>2021-04-16T00:00:00+09:00</published><updated>2021-04-16T00:00:00+09:00</updated><id>https://iamhyunji.github.io//cs%EA%B8%B0%EC%B4%88/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%20%EA%B3%B5%ED%95%99/software-engineering-01</id><content type="html" xml:base="https://iamhyunji.github.io//cs%EA%B8%B0%EC%B4%88/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%20%EA%B3%B5%ED%95%99/software-engineering-01/">&lt;h2 id=&quot;00-들어가기-전&quot;&gt;00. 들어가기 전&lt;/h2&gt;
&lt;p&gt;저처럼 비전공자이지만 학문적 기초를 닦고자 하시는 분들, 또는 전공자이나 기초적인 컴퓨터 과학 지식(일명 CS 기초)을 더 채우고자 하는 분들을 위해 부족하게나마 도움이 되고자 글을 씁니다.&lt;/p&gt;

&lt;p&gt;앞으로 CS 기초와 관련된 글들을 게시할 예정이고, 이번 포스팅은 &lt;strong&gt;소프트웨어 공학&lt;/strong&gt;에 대한 정리입니다. 글들은 책을 읽고 요약·정리한 내용으로 채울 예정이고, 추후 강의나 보충 자료를 통해 내용을 수정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;블로그에 들려주셔서 감사하고, 이 포스팅이 여러분들께 조금이나마 도움이 되길 바랍니다.
감사합니다.&lt;/p&gt;

&lt;h2 id=&quot;01-소프트웨어-공학이란&quot;&gt;01. 소프트웨어 공학이란?&lt;/h2&gt;
&lt;p&gt;개발 또는 정보 관련 자격증을 준비하면서 소프트웨어와 소프트웨어 공학이라는 말을 듣게 된다. 소프트웨어가 무엇인지는 막연히 알겠는데, 소프트웨어 공학은 무엇일까? &lt;br /&gt;
소프트웨어 공학은 소프트웨어를 어떻게 만들 것인지, 만드는 동안 소요되는 시간과 또 만들어진 결과물의 모습은 어떻게 되는지에 대해 정리한 것이라고 한다. &lt;br /&gt;
간단히 정리하자면 &lt;u&gt;소프트웨어를 어떻게하면 잘 만들 수 있는지 가르쳐주는 것&lt;/u&gt;이 &lt;strong&gt;소프트웨어 공학&lt;/strong&gt;이라고 한다.&lt;/p&gt;

&lt;h2 id=&quot;02-소프트웨어-공학-탄생과-정의&quot;&gt;02. 소프트웨어 공학 탄생과 정의&lt;/h2&gt;
&lt;p&gt;소프트웨어 공학이라는 개념은 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EC%9C%84%EA%B8%B0&quot; target=&quot;_blank&quot; class=&quot;link-no-underline&quot;&gt;소프트웨어 위기(Software Crisis)&lt;/a&gt; 속에서 탄생했다. 1960년대 프로그램 개발에 대한 수요가 폭발적으로 증가하면서 많은 개발 프로젝트가 진행됐지만, 당시 이를 지원해줄 공급은 턱없이 부족했고 이에 결과물은 당연히 좋지 못했다. &lt;br /&gt;
많은 소프트웨어 개발 프로젝트가 실패하면서 이를 극복하기 위해, 처음부터 모든 것을 만들어내는 것이 아닌 공학적 패러다임을 적용해 개발을 진행하자는 의견이 제기되었고, 1968년 10월 독일의 가미쉬(Garmisch) 도시에서 개최된 NATO의 한 커퍼런스에서 &lt;strong&gt;“소프트웨어 공학(Software Engineering)”&lt;/strong&gt;이라는 용어가 처음 제안되었다. &lt;br /&gt;
컨퍼런스가 진행될 때 의장이었던 &lt;a href=&quot;https://en.wikipedia.org/wiki/Friedrich_L._Bauer&quot; target=&quot;_blank&quot; class=&quot;link-no-underline&quot;&gt;프리드리히 바우어(Bauer)&lt;/a&gt;는 소프트웨어 공학을 다음과 같이 정의했다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;기계에서 효율적으로 작동되는 신뢰성 있는 소프트웨어를 경계적으로 획득하기 위해 적절한 공학적 원리를 수립하여 활용하는 것이다&lt;br /&gt;
“Establishment and use of sound engineering principles to economically obtain software that is reliable and works on real machines efficiently.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;소프트웨어 공학 IEEE(Institute of Electrical and Electronics Engineers)는 다르게 정의했다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;소프트웨어의 개발과 운용, 유지보수에 대한 체계적(systematic)이며, 훈련된(disciplined) 계량화할 수 있는(quantifiable) 접근방식의 적용이다&lt;br /&gt;
“the application of a systematic, disciplined, quantifiable approach to the development operation, and maintenance of software”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;간단히 정리하면,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;소프트웨어 공학은 소프트웨어 위기 때 많은 프로젝트 실패 속에서 해결 방안으로 탄생&lt;/li&gt;
  &lt;li&gt;소프트웨어 공학이란,
    &lt;ul&gt;
      &lt;li&gt;효율적이고 신뢰성 있는 소프트웨어를&lt;/li&gt;
      &lt;li&gt;경제적(비용과 시간을 고려)이게 개발하기 위하여&lt;/li&gt;
      &lt;li&gt;체계적이며 계량화할 수 있는 공학적 원리를 이용해 개발하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;정도로 이해하면 될 것 같다.&lt;/p&gt;

&lt;h2 id=&quot;03-소프트웨어-정의와-구성요소&quot;&gt;03. 소프트웨어 정의와 구성요소&lt;/h2&gt;
&lt;p&gt;위에서 소프트웨어 공학이 어떻게 탄생했고, 그것이 무엇인지 정의를 통해 알아봤다. 그렇다면 소프트웨어는 무엇일까? 무엇을 소프트웨어라 말할 수 있는걸까? 이는 단순히 프로그램을 일컫는 말일까? &lt;br /&gt;
답은 아니다. 이를 이해하기 위해 두 개의 정의를 살펴볼 필요가 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;소프트웨어는 단순한 프로그램 뿐만 아니라 프로그램이 올바르게 작동하도록 하는데 필요한 관련된 문서 및 설치 데이터를 의미한다.
by. 솜머빌(Sommerville)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;소프트웨어는 1) 실행되면서 원하는 기능이나 함수, 성능을 제공해 주는 명령어(컴퓨터 프로그램); 2) 프로그램이 데이터를 적절하게 처리할 수 있게 해 주는 자료구조; 3) 프로그램의 사용이나 운영을 나타내는 하드카피나 가상 형태인 문서이다. by. 프레스만(Presman)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;솜머빌은 소프트웨어를 프로그램 뿐 아니라 관련된 문서와 데이터까지 포함하여 정의했고, 프레스만은 프로그램, 문서, 그리고 자료구조까지 포함해 정의했다.&lt;/p&gt;

&lt;p&gt;즉, 소프트웨어는 프로그램 뿐만 아니라 문서와 데이터, 때로는 자료구조까지 포함한 것을 일컫는다.&lt;/p&gt;

&lt;h2 id=&quot;04-소프트웨어-특징-4가지&quot;&gt;04. 소프트웨어 특징 4가지&lt;/h2&gt;
&lt;p&gt;많은 프로젝트가 실패하면서 소프트웨어 공학이 탄생했는데, 소프트웨어가 어떤 특징을 갖고 있길래 많은 프로젝트들을 실패했을까?
소프트웨어의 특징은 4가지이다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;비가시성&lt;/li&gt;
  &lt;li&gt;변경성&lt;/li&gt;
  &lt;li&gt;복제성&lt;/li&gt;
  &lt;li&gt;복잡성&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;비가시성&quot;&gt;비가시성&lt;/h3&gt;
&lt;p&gt;비가시성이란 “가시성이 없음, 보이지 않는다”는 뜻이다. 개발 초기에는 소프트웨어 완성 모습을 알 수 없고, 개발 과정 중에도 변경이 일어나 모습을 명확히 그리기가 어렵다. 개발이 완료되더라도 화면만 볼 수 있을 뿐 소프트웨어 그 전체를 알 수 없고, 이러한 비가시성으로 인해 프로젝트는 관리가 어렵고 결과를 예측하기도 쉽지 않다는 특징이 있다.&lt;/p&gt;

&lt;h3 id=&quot;변경성&quot;&gt;변경성&lt;/h3&gt;
&lt;p&gt;소프트웨어는 변경하기가 쉽다는 특성이 있다. 프로젝트가 최종적으로 완성되기 전까지 소프트웨어는 계속 변경될 가능성이 있고, 완성된 후에도 유지보수를 통해 지속적으로 변경된다. 유지보수를 할 수록 처음 설계한 이상적인 모습에서 달라지게 되고 품질은 점점 더 떨어지게 된다.&lt;/p&gt;

&lt;h3 id=&quot;복제성&quot;&gt;복제성&lt;/h3&gt;
&lt;p&gt;소프트웨어는 무한 복제가 가능하다. 소프트웨어는 무한 복제가 가능하며, 복제를 아무리 많이 한다고 해도 닳아 없어지지 않는다.&lt;/p&gt;

&lt;h3 id=&quot;복잡성&quot;&gt;복잡성&lt;/h3&gt;
&lt;p&gt;소프트웨어 개발과정은 아주 복잡하고, 개발된 결과물인 문서산출물, 데이터 구조 및 데이터 또한 대단히 복잡하여 전체 시스템이 제대로 동작하게 하기 위해 전체를 조화롭게 작용해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;05-소프트웨어-탄생과-폐기&quot;&gt;05. 소프트웨어 탄생과 폐기&lt;/h2&gt;
&lt;p&gt;인간이 태어나고 죽음을 맞이하듯 소프트웨어도 무한히 사용하는 것이 아니라 탄생부터 폐기까지의 과정이 존재한다. 프로젝트를 관리함으로써 필요한 소프트웨어를 설계 및 개발하고, 가동 후에는 유지보수를 함으로써 소프트웨어를 운영해나간다. 그러다 다른 소프트웨어로 대체되는 시점에서 해당 소프트웨어는 폐기되는 과정을 거치게 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021-04-16-software-engineering-01.png&quot; alt=&quot;소프트웨어 라이프사이클&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;06-소프트웨어-도입-프로젝트-방식&quot;&gt;06. 소프트웨어 도입 프로젝트 방식&lt;/h2&gt;
&lt;p&gt;소프트웨어는 여러가지 이유에서 도입이 되고, 도입하는 방식에 따라 인하우스(in-house) 개발 프로젝트와 SI(System Integration) 프로젝트, 패키지 도입으로 나뉜다.&lt;/p&gt;

&lt;h3 id=&quot;인하우스in-house-개발-프로젝트&quot;&gt;인하우스(in-house) 개발 프로젝트&lt;/h3&gt;
&lt;p&gt;조직 내부에서 자체적인 개발 인력을 활용해 소프트웨어를 개발하는 방법이다. 소규모 프로젝트를 추진하여, 조속한 시일 내에 활용할 수 있도록 하고자 할 때 활용한다. 필요 개발자 또는 전문가를 계약해 일부 호라용하는 경우도 있다.&lt;/p&gt;

&lt;h3 id=&quot;sisystem-integration-프로젝트&quot;&gt;SI(System Integration) 프로젝트&lt;/h3&gt;
&lt;p&gt;조직 내부의 인력으로 감당하기 어려운 규모의 시스템을 구축하고자 할 때, 전문 SI업체에 개발을 맡기는 경우이다. SI업체 선정작업이 필요하고, 제안평가를 통해 업체를 선택하게 된다. 선택 과정에서 RFP(Request For Proposal)를 제시하여 도입하고자 하는 시스템의 목적과 규모, 프로젝트 기간, 예산 등을 SI업체에 제시하여 제안서를 받는 과정을 거친다.&lt;/p&gt;

&lt;h3 id=&quot;패키지-도입&quot;&gt;패키지 도입&lt;/h3&gt;
&lt;p&gt;패키지 종류는 다양하고, SAP이나 Oracle 등 세계적으로 유명한 기업의 ERP 패키지를 도입하는 경우가 대표적이다. 패키지의 기능을 수정 보완하여 활용할 수 있도록 커스터미이징이 가능하며, 수정해야 할 수준에 따라 커스터마이징 기간이 달라지고, 비용이 추가적으로 발생한다.&lt;/p&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;소프트웨어 위기&lt;/li&gt;
  &lt;li&gt;소프트웨어 공학 탄생과 정의&lt;/li&gt;
  &lt;li&gt;소프트웨어 개념 및 구성요소&lt;/li&gt;
  &lt;li&gt;소프트웨어 특징 4가지&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;추가-보완-사항&quot;&gt;추가 보완 사항&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;소프트웨어 위기의 자세한 내용과 1960년대 컴퓨터 수요 증가 원인을 보충하고 싶음&lt;/li&gt;
  &lt;li&gt;공학적 패러다임 / 공학 개념 도입의 의미를 더 파악하길 바람&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고문헌&quot;&gt;참고문헌&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788984687448&quot; target=&quot;_blank&quot;&gt;김희영, “실무에 바로 활용하는 소프트웨어 공학”(21세기사, 2018), pp.2 ~17&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kocw.net/home/search/kemView.do?kemId=1045594&quot; target=&quot;_blank&quot;&gt;“소프트웨어 공학” KOCW 강의 영상, 조영석, 2014, http://www.kocw.net/home/search/kemView.do?kemId=1045594&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.dict.naver.com/#/userEntry/koko/b40e01e7f02d67730b78b04a8acc2cbd&quot; target=&quot;_blank&quot;&gt;네이버 사전, “비가시성”, https://ko.dict.naver.com/#/userEntry/koko/b40e01e7f02d67730b78b04a8acc2cbd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Hyun</name></author><category term="CS기초" /><category term="소프트웨어 공학" /><summary type="html">소프트웨어 공학의 배경 및 개념과 소프트웨어 기초에 대한 설명</summary></entry><entry><title type="html">[정보처리기사] 1일차</title><link href="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day01/" rel="alternate" type="text/html" title="[정보처리기사] 1일차" /><published>2021-04-15T00:00:00+09:00</published><updated>2021-04-15T00:00:00+09:00</updated><id>https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day01</id><content type="html" xml:base="https://iamhyunji.github.io//%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/certificate-day01/">&lt;h2 id=&quot;i-요구사항-확인&quot;&gt;I. 요구사항 확인&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/pdfs/2021-04-15-certificate-day01.pdf&quot; class=&quot;btn&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;far fa-file-pdf&quot;&gt;&lt;/i&gt;&lt;span&gt; 정보처리기사 - I단원 오답.pdf&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;단원-목차&quot;&gt;단원 목차&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;현행 시스템 분석
    &lt;ul&gt;
      &lt;li&gt;현행 시스템 파악&lt;/li&gt;
      &lt;li&gt;개발 기술 환경 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;요구사항 확인
    &lt;ul&gt;
      &lt;li&gt;요구사항&lt;/li&gt;
      &lt;li&gt;요구사항의 시스템화 타당성 분석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분석 모델 확인하기
    &lt;ul&gt;
      &lt;li&gt;분석 모델 검증&lt;/li&gt;
      &lt;li&gt;분석 모델의 시스템화 타당성 분석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;설명&quot;&gt;설명&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;수제비 정보처리기사 실기책을 공부하면서 한 &lt;strong&gt;오답 정리&lt;/strong&gt;입니다.&lt;/li&gt;
  &lt;li&gt;이동 시 보기 편하도록 pdf 파일로 올렸습니다. 이는 위에 첨부된 &lt;span style=&quot;cursor:pointer;&quot; onclick=&quot;window.scrollTo(0,0);&quot;&gt;&lt;b&gt;&lt;u&gt;정보처리기사 - II단원 오답.pdf&lt;/u&gt;&lt;/b&gt;&lt;/span&gt; 파일을 클릭하시면 확인할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대단원-중단원-소단원&lt;/strong&gt;으로 구분 되어 있고, &lt;strong&gt;문제-상위 키워드-답&lt;/strong&gt;으로 구성되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Hyun</name></author><category term="정보처리기사" /><summary type="html">정보처리기사 I단원 관련 정리</summary></entry></feed>